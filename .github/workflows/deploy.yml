name: Terraform + Docker Deploy to AWS
on:
 push:
   branches: [main]
env:
 AWS_REGION: ${{ secrets.AWS_REGION }}
 ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
 IMAGE_TAG: latest
jobs:
 deploy:
   runs-on: ubuntu-latest
   steps:
   - name: Checkout code
     uses: actions/checkout@v3
   - name: Configure AWS credentials
     uses: aws-actions/configure-aws-credentials@v2
     with:
       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       aws-region: ${{ secrets.AWS_REGION }}
   - name: Login to Amazon ECR
     id: login-ecr
     uses: aws-actions/amazon-ecr-login@v1
   - name: Build and push Docker image
     env:
       ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
     run: |
       docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
       docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
   - name: Setup Terraform
     uses: hashicorp/setup-terraform@v2
   - name: Terraform Init
     working-directory: terraform
     run: terraform init
   - name: Terraform Plan
     working-directory: terraform
     run: terraform plan
   - name: Terraform Apply
     working-directory: terraform
     run: terraform apply -auto-approve
   - name: Trigger ECS deployment
     run: |
       aws ecs update-service \
         --cluster flask-portfolio-cluster \
         --service flask-portfolio-service \
         --force-new-deployment \
         --region ${{ secrets.AWS_REGION }}